{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","QuoteDetail","match","useRouteMatch","useParams","path","exact","url","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","NewQuote","NotFound","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.94e22055.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__c4480\",\"loading\":\"QuoteForm_loading__1iHU_\",\"control\":\"QuoteForm_control__2kekS\",\"actions\":\"QuoteForm_actions__xMEeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__NOYXQ\",\"logo\":\"MainNavigation_logo__1T8Jj\",\"nav\":\"MainNavigation_nav__3jVE-\",\"active\":\"MainNavigation_active__CZ9Q9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__30VHG\",\"loading\":\"NewCommentForm_loading__3MdMN\",\"control\":\"NewCommentForm_control__2ZPt9\",\"actions\":\"NewCommentForm_actions__2JKgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1XwBQ\",\"sorting\":\"QuoteList_sorting__1M4Ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2ld0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1vnGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__7TTfP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2hkR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1AQbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2-YOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__RlHwo\"};","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './QuoteItem.module.css';\r\n\r\nconst QuoteItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link className='btn' to={`/quotes/${props.id}`}>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default QuoteItem;\r\n","import { Fragment } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortingAscending = queryParams.get('sort') === 'asc';\r\n\r\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\r\n\r\n  const changeSortingHandler = () => {\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './NoQuotesFound.module.css';\r\n\r\nconst NoQuotesFound = () => {\r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No quotes found!</p>\r\n      <Link className='btn' to='/new-quote'>\r\n        Add a Quote\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoQuotesFound;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === 'SEND') {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: 'pending',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESS') {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR') {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: 'SEND' });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: 'SUCCESS', responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: 'ERROR',\r\n          errorMessage: error.message || 'Something went wrong!',\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = 'https://react-router-b6829-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(commentData, quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n    getAllQuotes,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\r\n\r\nconst HighlightedQuote = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p>{props.text}</p>\r\n      <figcaption>{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedQuote;\r\n","import { useRef } from 'react';\r\n\r\nimport classes from './NewCommentForm.module.css';\r\n\r\nconst NewCommentForm = (props) => {\r\n  const commentTextRef = useRef();\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // optional: Could validate here\r\n\r\n    // send comment to server\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor='comment'>Your Comment</label>\r\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className='btn'>Add Comment</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n","import { useState } from 'react';\r\n\r\nimport classes from './Comments.module.css';\r\nimport NewCommentForm from './NewCommentForm';\r\n\r\nconst Comments = () => {\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n\r\n  const startAddCommentHandler = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n  \r\n  return (\r\n    <section className={classes.comments}>\r\n      <h2>User Comments</h2>\r\n      {!isAddingComment && (\r\n        <button className='btn' onClick={startAddCommentHandler}>\r\n          Add a Comment\r\n        </button>\r\n      )}\r\n      {isAddingComment && <NewCommentForm />}\r\n      <p>Comments...</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { Fragment, useRef, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const finishEnteringHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  const formFocusedHandler = () => {\r\n    setIsEntering(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt\r\n        when={isEntering}\r\n        message={(location) =>\r\n          'Are you sure you want to leave? All your entered data will be lost!'\r\n        }\r\n      />\r\n      <Card>\r\n        <form\r\n          onFocus={formFocusedHandler}\r\n          className={classes.form}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor='author'>Author</label>\r\n            <input type='text' id='author' ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='text'>Text</label>\r\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      history.push('/quotes');\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className='centered'>\r\n      <p>Page not found!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to='/quotes' activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/new-quote' activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AllQuotes from './pages/AllQuotes';\r\nimport QuoteDetail from './pages/QuoteDetail';\r\nimport NewQuote from './pages/NewQuote';\r\nimport NotFound from './pages/NotFound';\r\nimport Layout from './components/layout/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Redirect to='/quotes' />\r\n        </Route>\r\n        <Route path='/quotes' exact>\r\n          <AllQuotes />\r\n        </Route>\r\n        <Route path='/quotes/:quoteId'>\r\n          <QuoteDetail />\r\n        </Route>\r\n        <Route path='/new-quote'>\r\n          <NewQuote />\r\n        </Route>\r\n        <Route path='*'>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n"],"sourceRoot":""}